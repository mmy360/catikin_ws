//#line 2 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the face_detection package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __face_detection__FACE_DETCONFIG_H__
#define __face_detection__FACE_DETCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace face_detection
{
  class face_detConfigStatics;

  class face_detConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(face_detConfig &config, const face_detConfig &max, const face_detConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const face_detConfig &config1, const face_detConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, face_detConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const face_detConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, face_detConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const face_detConfig &config) const = 0;
      virtual void getValue(const face_detConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T face_detConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (face_detConfig::* field);

      virtual void clamp(face_detConfig &config, const face_detConfig &max, const face_detConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const face_detConfig &config1, const face_detConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, face_detConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const face_detConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, face_detConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const face_detConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const face_detConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, face_detConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, face_detConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<face_detConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(face_detConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("imageInput"==(*_i)->name){imageInput = boost::any_cast<std::string>(val);}
        if("imageOutput"==(*_i)->name){imageOutput = boost::any_cast<std::string>(val);}
        if("skipFrames"==(*_i)->name){skipFrames = boost::any_cast<int>(val);}
        if("imgScale"==(*_i)->name){imgScale = boost::any_cast<double>(val);}
        if("neighborsValue"==(*_i)->name){neighborsValue = boost::any_cast<int>(val);}
        if("scaleValue"==(*_i)->name){scaleValue = boost::any_cast<double>(val);}
        if("minSize"==(*_i)->name){minSize = boost::any_cast<int>(val);}
        if("maxSize"==(*_i)->name){maxSize = boost::any_cast<int>(val);}
        if("cascadeValue"==(*_i)->name){cascadeValue = boost::any_cast<int>(val);}
        if("myflag"==(*_i)->name){myflag = boost::any_cast<int>(val);}
        if("displayed_Image"==(*_i)->name){displayed_Image = boost::any_cast<int>(val);}
        if("publish"==(*_i)->name){publish = boost::any_cast<int>(val);}
        if("pixelSwitch"==(*_i)->name){pixelSwitch = boost::any_cast<int>(val);}
        if("contrastFactor"==(*_i)->name){contrastFactor = boost::any_cast<double>(val);}
        if("histOnOff"==(*_i)->name){histOnOff = boost::any_cast<int>(val);}
        if("blurFactor"==(*_i)->name){blurFactor = boost::any_cast<int>(val);}
        if("brightnessFactor"==(*_i)->name){brightnessFactor = boost::any_cast<int>(val);}
        if("inputSkipp"==(*_i)->name){inputSkipp = boost::any_cast<int>(val);}
      }
    }

    std::string imageInput;
std::string imageOutput;
int skipFrames;
double imgScale;
int neighborsValue;
double scaleValue;
int minSize;
int maxSize;
int cascadeValue;
int myflag;
int displayed_Image;
int publish;
int pixelSwitch;
double contrastFactor;
int histOnOff;
int blurFactor;
int brightnessFactor;
int inputSkipp;

    bool state;
    std::string name;

    
}groups;



//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string imageInput;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      std::string imageOutput;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int skipFrames;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double imgScale;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int neighborsValue;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double scaleValue;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int minSize;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int maxSize;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int cascadeValue;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int myflag;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int displayed_Image;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int publish;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int pixelSwitch;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double contrastFactor;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int histOnOff;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int blurFactor;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int brightnessFactor;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int inputSkipp;
//#line 228 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("face_detConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const face_detConfig &__max__ = __getMax__();
      const face_detConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const face_detConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const face_detConfig &__getDefault__();
    static const face_detConfig &__getMax__();
    static const face_detConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const face_detConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void face_detConfig::ParamDescription<std::string>::clamp(face_detConfig &config, const face_detConfig &max, const face_detConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class face_detConfigStatics
  {
    friend class face_detConfig;

    face_detConfigStatics()
    {
face_detConfig::GroupDescription<face_detConfig::DEFAULT, face_detConfig> Default("Default", "", 0, 0, true, &face_detConfig::groups);
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.imageInput = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.imageInput = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.imageInput = "/camera/image_raw";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<std::string>("imageInput", "str", 0, "Subscribe to this image topic", "", &face_detConfig::imageInput)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<std::string>("imageInput", "str", 0, "Subscribe to this image topic", "", &face_detConfig::imageInput)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.imageOutput = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.imageOutput = "";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.imageOutput = "/facerec/image_raw";
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<std::string>("imageOutput", "str", 0, "Publish to this image topic", "", &face_detConfig::imageOutput)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<std::string>("imageOutput", "str", 0, "Publish to this image topic", "", &face_detConfig::imageOutput)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.skipFrames = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.skipFrames = 20;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.skipFrames = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("skipFrames", "int", 0, "Skip frames that are used for detection", "", &face_detConfig::skipFrames)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("skipFrames", "int", 0, "Skip frames that are used for detection", "", &face_detConfig::skipFrames)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.imgScale = -std::numeric_limits<double>::infinity();
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.imgScale = std::numeric_limits<double>::infinity();
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.imgScale = 0.625;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<double>("imgScale", "double", 0, "Select a scaling factor for the detection image", "{'enum_description': 'The detection image will be resized by this value. (great performance increase).', 'enum': [{'srcline': 19, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 1.0, 'ctype': 'double', 'type': 'double', 'name': 'No_Resize'}, {'srcline': 20, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.875, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_875'}, {'srcline': 21, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.75, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_75'}, {'srcline': 22, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.625, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_625'}, {'srcline': 23, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.5, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_5'}, {'srcline': 24, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.375, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_375'}, {'srcline': 25, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.25, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_25'}, {'srcline': 26, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.125, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_125'}]}", &face_detConfig::imgScale)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<double>("imgScale", "double", 0, "Select a scaling factor for the detection image", "{'enum_description': 'The detection image will be resized by this value. (great performance increase).', 'enum': [{'srcline': 19, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 1.0, 'ctype': 'double', 'type': 'double', 'name': 'No_Resize'}, {'srcline': 20, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.875, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_875'}, {'srcline': 21, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.75, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_75'}, {'srcline': 22, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.625, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_625'}, {'srcline': 23, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.5, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_5'}, {'srcline': 24, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.375, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_375'}, {'srcline': 25, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.25, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_25'}, {'srcline': 26, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const double', 'value': 0.125, 'ctype': 'double', 'type': 'double', 'name': 'Resize_by_0_125'}]}", &face_detConfig::imgScale)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.neighborsValue = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.neighborsValue = 8;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.neighborsValue = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("neighborsValue", "int", 0, "The number of neiboring detections required for a sucessfull detection", "", &face_detConfig::neighborsValue)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("neighborsValue", "int", 0, "The number of neiboring detections required for a sucessfull detection", "", &face_detConfig::neighborsValue)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.scaleValue = 1.01;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.scaleValue = 1.5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.scaleValue = 1.2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<double>("scaleValue", "double", 0, "Multiplicator for each step of the detection", "", &face_detConfig::scaleValue)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<double>("scaleValue", "double", 0, "Multiplicator for each step of the detection", "", &face_detConfig::scaleValue)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.minSize = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.minSize = 1024;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.minSize = 40;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("minSize", "int", 0, "Minimum size for the search window.", "", &face_detConfig::minSize)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("minSize", "int", 0, "Minimum size for the search window.", "", &face_detConfig::minSize)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.maxSize = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.maxSize = 1024;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.maxSize = 200;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("maxSize", "int", 0, "Maximum size for the search window.", "", &face_detConfig::maxSize)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("maxSize", "int", 0, "Maximum size for the search window.", "", &face_detConfig::maxSize)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.cascadeValue = -2147483648;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.cascadeValue = 2147483647;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.cascadeValue = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("cascadeValue", "int", 0, "Select a Cascade", "{'enum_description': 'An enum to set size', 'enum': [{'srcline': 44, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'haarcascade_frontalface_alt'}, {'srcline': 45, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'haarcascade_frontalface_alt2'}, {'srcline': 46, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'haarcascade_frontalface_alt_tree'}, {'srcline': 47, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'haarcascade_frontalface_default'}, {'srcline': 48, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'lbpcascade_frontalface'}]}", &face_detConfig::cascadeValue)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("cascadeValue", "int", 0, "Select a Cascade", "{'enum_description': 'An enum to set size', 'enum': [{'srcline': 44, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'haarcascade_frontalface_alt'}, {'srcline': 45, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'haarcascade_frontalface_alt2'}, {'srcline': 46, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'haarcascade_frontalface_alt_tree'}, {'srcline': 47, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'haarcascade_frontalface_default'}, {'srcline': 48, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'lbpcascade_frontalface'}]}", &face_detConfig::cascadeValue)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.myflag = -2147483648;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.myflag = 2147483647;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.myflag = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("myflag", "int", 0, "Select a type of detection", "{'enum_description': 'An enum to set size', 'enum': [{'srcline': 52, 'description': 'Standart type', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Scale'}, {'srcline': 53, 'description': 'Only returns the biggest detection', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Biggest'}, {'srcline': 54, 'description': 'Reduces Canny pruning to reduce the number of false detections', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Canny'}, {'srcline': 55, 'description': 'Rought Detection Search', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Rough'}]}", &face_detConfig::myflag)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("myflag", "int", 0, "Select a type of detection", "{'enum_description': 'An enum to set size', 'enum': [{'srcline': 52, 'description': 'Standart type', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Scale'}, {'srcline': 53, 'description': 'Only returns the biggest detection', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Biggest'}, {'srcline': 54, 'description': 'Reduces Canny pruning to reduce the number of false detections', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Canny'}, {'srcline': 55, 'description': 'Rought Detection Search', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Rough'}]}", &face_detConfig::myflag)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.displayed_Image = -2147483648;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.displayed_Image = 2147483647;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.displayed_Image = 3;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("displayed_Image", "int", 0, "Select type of debugging", "{'enum_description': 'An enum to set debugging', 'enum': [{'srcline': 59, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Display_Nothing'}, {'srcline': 60, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Displays_Image'}, {'srcline': 61, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Displays_Detection_Image'}, {'srcline': 62, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Displays_With_Overlay'}]}", &face_detConfig::displayed_Image)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("displayed_Image", "int", 0, "Select type of debugging", "{'enum_description': 'An enum to set debugging', 'enum': [{'srcline': 59, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Display_Nothing'}, {'srcline': 60, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Displays_Image'}, {'srcline': 61, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Displays_Detection_Image'}, {'srcline': 62, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Displays_With_Overlay'}]}", &face_detConfig::displayed_Image)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.publish = -2147483648;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.publish = 2147483647;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.publish = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("publish", "int", 0, "Select what is published", "{'enum_description': 'An enum to set publishing', 'enum': [{'srcline': 66, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'No_Publishing'}, {'srcline': 67, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Publish_Image'}, {'srcline': 68, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Publish_Data'}, {'srcline': 69, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Publish_Image_and_Data'}]}", &face_detConfig::publish)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("publish", "int", 0, "Select what is published", "{'enum_description': 'An enum to set publishing', 'enum': [{'srcline': 66, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'No_Publishing'}, {'srcline': 67, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Publish_Image'}, {'srcline': 68, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'Publish_Data'}, {'srcline': 69, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'Publish_Image_and_Data'}]}", &face_detConfig::publish)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.pixelSwitch = -2147483648;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.pixelSwitch = 2147483647;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.pixelSwitch = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("pixelSwitch", "int", 1, "Select a detection display type", "{'enum_description': 'An enum to set pixelSwitch', 'enum': [{'srcline': 73, 'description': 'Draws Detection Boxes', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Detection_Boxes'}, {'srcline': 74, 'description': 'Pixelises the detected Faces', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Pixelise'}]}", &face_detConfig::pixelSwitch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("pixelSwitch", "int", 1, "Select a detection display type", "{'enum_description': 'An enum to set pixelSwitch', 'enum': [{'srcline': 73, 'description': 'Draws Detection Boxes', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Detection_Boxes'}, {'srcline': 74, 'description': 'Pixelises the detected Faces', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Pixelise'}]}", &face_detConfig::pixelSwitch)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.contrastFactor = 0.2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.contrastFactor = 2.5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.contrastFactor = 1.5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<double>("contrastFactor", "double", 0, "The contrast factor applied to the image to improve detection", "", &face_detConfig::contrastFactor)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<double>("contrastFactor", "double", 0, "The contrast factor applied to the image to improve detection", "", &face_detConfig::contrastFactor)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.histOnOff = -2147483648;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.histOnOff = 2147483647;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.histOnOff = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("histOnOff", "int", 1, "Select a detection display type", "{'enum_description': 'An enum to set pixelSwitch', 'enum': [{'srcline': 84, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Histogram_Equalisation_OFF'}, {'srcline': 85, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Histogram_Equalisation_ON'}]}", &face_detConfig::histOnOff)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("histOnOff", "int", 1, "Select a detection display type", "{'enum_description': 'An enum to set pixelSwitch', 'enum': [{'srcline': 84, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'Histogram_Equalisation_OFF'}, {'srcline': 85, 'description': '', 'srcfile': '/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'Histogram_Equalisation_ON'}]}", &face_detConfig::histOnOff)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.blurFactor = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.blurFactor = 10;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.blurFactor = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("blurFactor", "int", 0, "blurs the image a little, used to reduce noise on full resolution images (imageScaleValue = 1)", "", &face_detConfig::blurFactor)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("blurFactor", "int", 0, "blurs the image a little, used to reduce noise on full resolution images (imageScaleValue = 1)", "", &face_detConfig::blurFactor)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.brightnessFactor = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.brightnessFactor = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.brightnessFactor = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("brightnessFactor", "int", 0, "brightens up the image", "", &face_detConfig::brightnessFactor)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("brightnessFactor", "int", 0, "brightens up the image", "", &face_detConfig::brightnessFactor)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.inputSkipp = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.inputSkipp = 10000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.inputSkipp = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("inputSkipp", "int", 0, "start skipping frames from the input after X frames, generally use '1' for realtime feedback, or much higher values for saving image sequences to disk", "", &face_detConfig::inputSkipp)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(face_detConfig::AbstractParamDescriptionConstPtr(new face_detConfig::ParamDescription<int>("inputSkipp", "int", 0, "start skipping frames from the input after X frames, generally use '1' for realtime feedback, or much higher values for saving image sequences to disk", "", &face_detConfig::inputSkipp)));
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(face_detConfig::AbstractGroupDescriptionConstPtr(new face_detConfig::GroupDescription<face_detConfig::DEFAULT, face_detConfig>(Default)));
//#line 366 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<face_detConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<face_detConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<face_detConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    face_detConfig __max__;
    face_detConfig __min__;
    face_detConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const face_detConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static face_detConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &face_detConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const face_detConfig &face_detConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const face_detConfig &face_detConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const face_detConfig &face_detConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<face_detConfig::AbstractParamDescriptionConstPtr> &face_detConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<face_detConfig::AbstractGroupDescriptionConstPtr> &face_detConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const face_detConfigStatics *face_detConfig::__get_statics__()
  {
    const static face_detConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = face_detConfigStatics::get_instance();

    return statics;
  }

//#line 19 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const double face_det_No_Resize = 1.0;
//#line 20 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const double face_det_Resize_by_0_875 = 0.875;
//#line 21 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const double face_det_Resize_by_0_75 = 0.75;
//#line 22 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const double face_det_Resize_by_0_625 = 0.625;
//#line 23 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const double face_det_Resize_by_0_5 = 0.5;
//#line 24 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const double face_det_Resize_by_0_375 = 0.375;
//#line 25 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const double face_det_Resize_by_0_25 = 0.25;
//#line 26 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const double face_det_Resize_by_0_125 = 0.125;
//#line 44 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_haarcascade_frontalface_alt = 0;
//#line 45 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_haarcascade_frontalface_alt2 = 1;
//#line 46 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_haarcascade_frontalface_alt_tree = 2;
//#line 47 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_haarcascade_frontalface_default = 3;
//#line 48 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_lbpcascade_frontalface = 4;
//#line 52 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Scale = 0;
//#line 53 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Biggest = 1;
//#line 54 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Canny = 2;
//#line 55 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Rough = 3;
//#line 59 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Display_Nothing = 0;
//#line 60 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Displays_Image = 1;
//#line 61 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Displays_Detection_Image = 2;
//#line 62 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Displays_With_Overlay = 3;
//#line 66 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_No_Publishing = 0;
//#line 67 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Publish_Image = 1;
//#line 68 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Publish_Data = 2;
//#line 69 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Publish_Image_and_Data = 3;
//#line 73 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Detection_Boxes = 0;
//#line 74 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Pixelise = 1;
//#line 84 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Histogram_Equalisation_OFF = 0;
//#line 85 "/home/robotis/catkin_ws/src/face_detection/cfg/face_det.cfg"
      const int face_det_Histogram_Equalisation_ON = 1;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __FACE_DETRECONFIGURATOR_H__
